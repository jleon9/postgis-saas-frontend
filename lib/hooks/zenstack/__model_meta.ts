/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

const metadata = {
    models: {
        role: {
            name: 'Role', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, name: {
                    name: "name",
                    type: "String",
                }, description: {
                    name: "description",
                    type: "String",
                    isOptional: true,
                }, users: {
                    name: "users",
                    type: "User",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'role',
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, name: {
                    name: "name",
                    fields: ["name"]
                },
            }
            ,
        }
        ,
        organization: {
            name: 'Organization', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, name: {
                    name: "name",
                    type: "String",
                }, slug: {
                    name: "slug",
                    type: "String",
                }, domain: {
                    name: "domain",
                    type: "String",
                    isOptional: true,
                }, users: {
                    name: "users",
                    type: "User",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'organization',
                }, authors: {
                    name: "authors",
                    type: "Author",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'organization',
                }, posts: {
                    name: "posts",
                    type: "Post",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'organization',
                }, properties: {
                    name: "properties",
                    type: "Property",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'organization',
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, name: {
                    name: "name",
                    fields: ["name"]
                }, slug: {
                    name: "slug",
                    fields: ["slug"]
                }, domain: {
                    name: "domain",
                    fields: ["domain"]
                },
            }
            ,
        }
        ,
        user: {
            name: 'User', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, email: {
                    name: "email",
                    type: "String",
                }, password: {
                    name: "password",
                    type: "String",
                }, name: {
                    name: "name",
                    type: "String",
                }, role: {
                    name: "role",
                    type: "Role",
                    isDataModel: true,
                    backLink: 'users',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "roleId" },
                }, roleId: {
                    name: "roleId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'role',
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    backLink: 'users',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "organizationId" },
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'organization',
                }, refreshToken: {
                    name: "refreshToken",
                    type: "RefreshToken",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'user',
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, email: {
                    name: "email",
                    fields: ["email"]
                },
            }
            ,
        }
        ,
        refreshToken: {
            name: 'RefreshToken', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, hashedToken: {
                    name: "hashedToken",
                    type: "String",
                }, expires: {
                    name: "expires",
                    type: "DateTime",
                }, revoked: {
                    name: "revoked",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    backLink: 'refreshToken',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "userId" },
                }, userId: {
                    name: "userId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'user',
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, userId: {
                    name: "userId",
                    fields: ["userId"]
                },
            }
            ,
        }
        ,
        author: {
            name: 'Author', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, name: {
                    name: "name",
                    type: "String",
                }, email: {
                    name: "email",
                    type: "String",
                }, posts: {
                    name: "posts",
                    type: "Post",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'author',
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    backLink: 'authors',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "organizationId" },
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'organization',
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, email: {
                    name: "email",
                    fields: ["email"]
                },
            }
            ,
        }
        ,
        post: {
            name: 'Post', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, title: {
                    name: "title",
                    type: "String",
                }, content: {
                    name: "content",
                    type: "String",
                }, tags: {
                    name: "tags",
                    type: "String",
                    isArray: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, author: {
                    name: "author",
                    type: "Author",
                    isDataModel: true,
                    backLink: 'posts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "authorId" },
                }, authorId: {
                    name: "authorId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'author',
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    backLink: 'posts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "organizationId" },
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'organization',
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            }
            ,
        }
        ,
        property: {
            name: 'Property', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    backLink: 'properties',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "organizationId" },
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'organization',
                }, address: {
                    name: "address",
                    type: "String",
                }, price: {
                    name: "price",
                    type: "Decimal",
                }, bedrooms: {
                    name: "bedrooms",
                    type: "Int",
                }, bathrooms: {
                    name: "bathrooms",
                    type: "Int",
                }, sqft: {
                    name: "sqft",
                    type: "Int",
                }, location: {
                    name: "location",
                    type: "String",
                }, similarToProperties: {
                    name: "similarToProperties",
                    type: "PropertySimilarity",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'property',
                }, similarFromProperties: {
                    name: "similarFromProperties",
                    type: "PropertySimilarity",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'similarProperty',
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            }
            ,
        }
        ,
        propertySimilarity: {
            name: 'PropertySimilarity', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, propertyId: {
                    name: "propertyId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'property',
                }, similarPropertyId: {
                    name: "similarPropertyId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'similarProperty',
                }, similarity_score: {
                    name: "similarity_score",
                    type: "Float",
                }, priceScore: {
                    name: "priceScore",
                    type: "Float",
                }, sizeScore: {
                    name: "sizeScore",
                    type: "Float",
                }, locationScore: {
                    name: "locationScore",
                    type: "Float",
                }, amenityScore: {
                    name: "amenityScore",
                    type: "Float",
                }, property: {
                    name: "property",
                    type: "Property",
                    isDataModel: true,
                    backLink: 'similarToProperties',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "propertyId" },
                }, similarProperty: {
                    name: "similarProperty",
                    type: "Property",
                    isDataModel: true,
                    backLink: 'similarFromProperties',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "similarPropertyId" },
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, propertyId_similarPropertyId: {
                    name: "propertyId_similarPropertyId",
                    fields: ["propertyId", "similarPropertyId"]
                },
            }
            ,
        }
        ,
        amenity: {
            name: 'Amenity', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, name: {
                    name: "name",
                    type: "String",
                }, type: {
                    name: "type",
                    type: "String",
                }, location: {
                    name: "location",
                    type: "String",
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            }
            ,
        }
        ,
    }
    ,
    deleteCascade: {
        user: ['RefreshToken'],
    }
    ,
    authModel: 'User'
};
export default metadata;
